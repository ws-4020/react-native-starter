diff --git a/src/screens/todo/TodoBoard.tsx b/src/screens/todo/TodoBoard.tsx
index 0180c85..fa96bf7 100644
--- a/src/screens/todo/TodoBoard.tsx
+++ b/src/screens/todo/TodoBoard.tsx
@@ -1,15 +1,79 @@
 import {useNavigation} from '@react-navigation/native';
-import React from 'react';
-import {StyleSheet, View} from 'react-native';
-import {Text, Button} from 'react-native-elements';
+import {FilterType, TodoFilter, TodoList} from 'components/parts';
+import React, {useContext, useEffect, useState} from 'react';
+import {Alert, StyleSheet, View} from 'react-native';
+import {Icon, ThemeContext} from 'react-native-elements';
+import {Todo, TodoService} from 'services';
+
+type ShowFilter = {
+  [K in FilterType]: (todo: Todo) => boolean;
+};
+
+const showFilter: ShowFilter = {
+  [FilterType.ALL]: () => true,
+  [FilterType.INCOMPLETE]: (todo) => !todo.completed,
+  [FilterType.COMPLETED]: (todo) => todo.completed,
+};
 
 export const TodoBoard: React.FC = () => {
   const navigation = useNavigation();
+  const {theme} = useContext(ThemeContext);
+  const [todos, setTodos] = useState<Todo[]>([]);
+  const [filterType, setFilterType] = useState<FilterType>(FilterType.ALL);
+
+  useEffect(() => {
+    let isActive = true;
+
+    TodoService.getTodos()
+      .then((response) => {
+        if (isActive) {
+          setTodos(response);
+        }
+      })
+      .catch(() => {});
+
+    return () => {
+      isActive = false;
+    };
+  }, []);
+
+  const toggleTodoCompletion = (id: number) => {
+    const target = todos.find((todo) => todo.id === id);
+    if (!target) {
+      return;
+    }
+    TodoService.putTodo(id, !target.completed)
+      .then((returnedTodo) => setTodos(todos.map((todo) => (todo.id === id ? returnedTodo : todo))))
+      .catch(() => {});
+  };
+
+  const removeTodo = (id: number) => {
+    Alert.alert('未実装です');
+  };
+
+  const showTodos = todos.filter(showFilter[filterType]);
 
   return (
-    <View style={styles.container}>
-      <Text h1>Todo</Text>
-      <Button onPress={() => navigation.navigate('TodoForm')} title="タスク登録" />
+    <View style={styles.container} testID="screen/main/home">
+      <TodoFilter filterType={filterType} setFilterType={setFilterType} />
+      <TodoList
+        todos={showTodos}
+        contentContainerStyle={styles.todoListContainer}
+        toggleTodoCompletion={toggleTodoCompletion}
+        removeTodo={removeTodo}
+      />
+      <Icon
+        name="plus"
+        type="font-awesome-5"
+        color={theme.colors?.primary}
+        raised
+        reverse
+        size={30}
+        containerStyle={styles.iconContainerStyle}
+        onPress={() => {
+          navigation.navigate('TodoForm');
+        }}
+      />
     </View>
   );
 };
@@ -17,7 +81,15 @@ export const TodoBoard: React.FC = () => {
 const styles = StyleSheet.create({
   container: {
     flex: 1,
-    alignItems: 'center',
-    justifyContent: 'center',
+  },
+  todoListContainer: {
+    paddingLeft: 20,
+    paddingRight: 20,
+    paddingBottom: 80,
+  },
+  iconContainerStyle: {
+    position: 'absolute',
+    bottom: 10,
+    right: 10,
   },
 });
diff --git a/src/services/index.ts b/src/services/index.ts
index af1ad50..3e40d75 100644
--- a/src/services/index.ts
+++ b/src/services/index.ts
@@ -1 +1,2 @@
 export * from './AuthService';
+export * from './TodoService';
