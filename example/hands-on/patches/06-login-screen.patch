diff --git a/package.json b/package.json
index cc5c15d..f3d20e0 100644
--- a/package.json
+++ b/package.json
@@ -29,13 +29,15 @@
     "expo-build-properties": "~0.8.3",
     "expo-splash-screen": "~0.20.5",
     "expo-status-bar": "~1.6.0",
+    "formik": "^2.2.6",
     "react": "18.2.0",
     "react-native": "0.72.4",
     "react-native-elements": "~3.4.0",
     "react-native-gesture-handler": "~2.12.0",
     "react-native-reanimated": "~3.3.0",
     "react-native-safe-area-context": "4.6.3",
-    "react-native-screens": "~3.22.0"
+    "react-native-screens": "~3.22.0",
+    "yup": "^0.32.9"
   },
   "devDependencies": {
     "@babel/core": "^7.19.3",
diff --git a/src/screens/auth/Login.tsx b/src/screens/auth/Login.tsx
index 242be0d..6c8a320 100644
--- a/src/screens/auth/Login.tsx
+++ b/src/screens/auth/Login.tsx
@@ -1,28 +1,69 @@
 import {useUserContext} from 'contexts/UserContext';
+import {useFormik} from 'formik';
 import React, {useCallback} from 'react';
 import {StyleSheet, View} from 'react-native';
-import {Text, Button} from 'react-native-elements';
+import {Button, Input} from 'react-native-elements';
+import * as Yup from 'yup';
 
 export const Login: React.FC = () => {
   const userContext = useUserContext();
 
-  const login = useCallback(() => {
-    // 後で例外処理を追加するので、今はlintのエラーは無視してください。
-    userContext.login('user', 'password');
-  }, [userContext]);
+  const login = useCallback(
+    (values: {name: string; password: string}) => {
+      userContext.login(values.name, values.password).then(
+        () => {},
+        () => {},
+      );
+    },
+    [userContext],
+  );
+
+  const formik = useFormik({
+    initialValues: {name: '', password: ''},
+    validationSchema: Yup.object().shape({
+      name: Yup.string().required('名前を入力してください'),
+      password: Yup.string().required('パスワードを入力してください'),
+    }),
+    validateOnChange: false,
+    onSubmit: login,
+  });
 
   return (
-    <View style={styles.container}>
-      <Text h1>ログイン</Text>
-      <Button onPress={login} title="ログイン" />
+    <View style={styles.form}>
+      <Input
+        label="名前"
+        containerStyle={styles.input}
+        autoCapitalize="none"
+        errorMessage={formik.errors.name}
+        onChangeText={formik.handleChange('name')}
+        value={formik.values.name}
+      />
+      <Input
+        label="パスワード"
+        containerStyle={styles.input}
+        errorMessage={formik.errors.password}
+        secureTextEntry
+        onChangeText={formik.handleChange('password')}
+        value={formik.values.password}
+      />
+      <Button
+        disabled={formik.isSubmitting}
+        onPress={() => formik.handleSubmit()}
+        title="ログインする"
+        buttonStyle={styles.button}
+      />
     </View>
   );
 };
 
 const styles = StyleSheet.create({
-  container: {
+  form: {
     flex: 1,
     alignItems: 'center',
     justifyContent: 'center',
   },
+  input: {marginTop: 20, width: '80%'},
+  button: {
+    marginTop: 30,
+  },
 });
