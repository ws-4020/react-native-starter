diff --git a/src/components/parts/todo/TodoItem.tsx b/src/components/parts/todo/TodoItem.tsx
index 86a7aa7..8dc922d 100644
--- a/src/components/parts/todo/TodoItem.tsx
+++ b/src/components/parts/todo/TodoItem.tsx
@@ -1,15 +1,16 @@
 import React, {useCallback} from 'react';
-import {StyleSheet, View} from 'react-native';
+import {StyleSheet, View, ActivityIndicator} from 'react-native';
 import {CheckBox} from 'react-native-elements';
 
 interface Props {
   id: number;
   text: string;
   completed: boolean;
+  processing: boolean;
   toggleTodoCompletion: (id: number) => void;
 }
 
-export const TodoItem: React.FC<Props> = ({id, text, completed, toggleTodoCompletion}) => {
+export const TodoItem: React.FC<Props> = ({id, text, completed, toggleTodoCompletion, processing}) => {
   const onToggle = useCallback(() => toggleTodoCompletion(id), [id, toggleTodoCompletion]);
 
   return (
@@ -17,6 +18,11 @@ export const TodoItem: React.FC<Props> = ({id, text, completed, toggleTodoComple
       <View style={styles.todo}>
         <CheckBox title={text} checked={completed} containerStyle={styles.checkbox} onPress={onToggle} />
       </View>
+      {processing && (
+        <View style={styles.processing}>
+          <ActivityIndicator animating={processing} size="large" color="white" style={styles.indicator} />
+        </View>
+      )}
     </View>
   );
 };
@@ -36,6 +42,21 @@ const styles = StyleSheet.create({
     flexGrow: 1,
     flexShrink: 1,
   },
+  processing: {
+    flex: 1,
+    position: 'absolute',
+    borderRadius: 10,
+    backgroundColor: 'rgba(0, 0, 0, 0.2)',
+    width: '100%',
+    height: '100%',
+    flexDirection: 'column',
+    zIndex: 2,
+  },
+  indicator: {
+    justifyContent: 'center',
+    alignSelf: 'center',
+    flexGrow: 1,
+  },
   checkbox: {
     backgroundColor: 'transparent',
     borderWidth: 0,
diff --git a/src/components/parts/todo/TodoList.tsx b/src/components/parts/todo/TodoList.tsx
index 9cf973f..d61e5d0 100644
--- a/src/components/parts/todo/TodoList.tsx
+++ b/src/components/parts/todo/TodoList.tsx
@@ -6,12 +6,19 @@ import {TodoItem} from './TodoItem';
 
 interface Props {
   todos: Todo[];
+  processingTodos: number[];
   contentContainerStyle?: StyleProp<ViewStyle>;
   toggleTodoCompletion: (id: number) => void;
   removeTodo: (id: number) => void;
 }
 
-export const TodoList: React.FC<Props> = ({todos, contentContainerStyle, toggleTodoCompletion, removeTodo}) => {
+export const TodoList: React.FC<Props> = ({
+  todos,
+  contentContainerStyle,
+  toggleTodoCompletion,
+  removeTodo,
+  processingTodos,
+}) => {
   return (
     <FlatList
       style={styles.list}
@@ -24,6 +31,7 @@ export const TodoList: React.FC<Props> = ({todos, contentContainerStyle, toggleT
           text={todo.text}
           completed={todo.completed}
           toggleTodoCompletion={toggleTodoCompletion}
+          processing={processingTodos.includes(todo.id)}
         />
       )}
       keyExtractor={(todo) => String(todo.id)}
diff --git a/src/screens/todo/TodoBoard.tsx b/src/screens/todo/TodoBoard.tsx
index 5d94d3a..ef0a2c6 100644
--- a/src/screens/todo/TodoBoard.tsx
+++ b/src/screens/todo/TodoBoard.tsx
@@ -21,6 +21,7 @@ export const TodoBoard: React.FC = () => {
   const [todos, setTodos] = useState<Todo[]>([]);
   const [filterType, setFilterType] = useState<FilterType>(FilterType.ALL);
   const [loading, setLoading] = useState(false);
+  const [processingTodos, setProcessingTodos] = useState<number[]>([]);
 
   useFocusEffect(
     useCallback(() => {
@@ -53,13 +54,19 @@ export const TodoBoard: React.FC = () => {
     if (!target) {
       return;
     }
+    setProcessingTodos((prevs) => [id, ...prevs]);
     TodoService.putTodo(id, !target.completed)
       .then((returnedTodo) =>
         setTodos((prevTodos) => {
           return prevTodos.map((todo) => (todo.id === id ? returnedTodo : todo));
         }),
       )
-      .catch(() => {});
+      .catch(() => {})
+      .finally(() => {
+        setProcessingTodos((prevs) => {
+          return prevs.filter((processedId) => processedId !== id);
+        });
+      });
   };
 
   const removeTodo = (id: number) => {
@@ -76,6 +83,7 @@ export const TodoBoard: React.FC = () => {
         contentContainerStyle={styles.todoListContainer}
         toggleTodoCompletion={toggleTodoCompletion}
         removeTodo={removeTodo}
+        processingTodos={processingTodos}
       />
       <Icon
         name="plus"
